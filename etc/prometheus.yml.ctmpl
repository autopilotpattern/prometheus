# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'prometheus-monitor'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'containerpilot'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    metrics_path: /metrics
    # scheme defaults to 'http'.

    consul_sd_configs:
     - server: '{{env "CONSUL"}}:8500'
       services: ['containerpilot']

  - job_name: 'prometheus'
    metrics_path: /metrics
    static_configs:
     - targets: ['localhost:9090']


  {{ $triton_tls_configured := env "TLSCA_PATH" }}
  {{ if $triton_tls_configured }}
  - job_name: 'triton'

    scrape_interval: 15s
    metrics_path: /metrics

    triton_sd_configs:
     - account: '{{env "TRITON_ACCOUNT"}}'
       dns_suffix: 'cmon.{{env "TRITON_DC"}}.triton.zone'
       endpoint: 'cmon.{{env "TRITON_DC"}}.triton.zone'
       tls_config:
        - ca_file: '{{env "TLSCA_PATH"}}'
          cert_file: '{{env "TLSCERT_PATH"}}'
          key_file: '{{env "TLSKEY_PATH"}}'
          insecure_skip_verify: true
          # server_name: 
  {{ end }}

